#!/usr/bin/env python3
"""
When restoring photos from Google Takeout, their modification date is lost.
This script updates the file creation date with the timestamp from the JSON
metadata file generated by Google.
"""
import argparse
import datetime
import json
import logging
import os
import pytz


LOG = logging.getLogger(__name__)


def fix_file(meta_filename: str):
    dirname = os.path.dirname(meta_filename)
    with open(meta_filename) as f:
        meta = json.load(f)
        media_filename = os.path.join(dirname, meta['title'])
        timestamp = int(meta['photoTakenTime']['timestamp'])
        photo_taken_time = pytz.datetime.datetime.fromtimestamp(timestamp)

        if not os.path.exists(media_filename):
            LOG.warning(f"file not found: {media_filename}")
        else:
            os.utime(media_filename, (photo_taken_time.timestamp(), photo_taken_time.timestamp()))


if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog='photofix', description='Fix photo dates',)
    parser.add_argument('filename')
    args = parser.parse_args()

    logging.basicConfig(level=logging.INFO)

    if os.path.isfile(args.filename):
        fix_file(args.filename)

    if os.path.isdir(args.filename):
        for root, dir, files in os.walk(args.filename):
            for filename in files:
                if filename.endswith(".json") and filename not in [
                        "user-generated-memory-titles.json",
                        "shared_album_comments.json",
                        "print-subscriptions.json",
                        "metadata.json",
                        ]:
                    try:
                        fix_file(os.path.join(root, filename))
                    except Exception as e:
                        print(f"{root}/{filename}: {e}")
                        raise
